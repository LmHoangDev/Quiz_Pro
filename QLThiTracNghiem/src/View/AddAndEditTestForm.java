/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAO.Implement.ChapterDAO;
import DAO.Implement.LevelDAO;
import DAO.Implement.QuestionDAO;
import DAO.Implement.TestDAO;
import DAO.Implement.Test_QuestionDAO;
import Model.Chapter;
import Model.Level;
import Model.Question;
import Model.Test;
import Model.Test_Question;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author mrloc
 */
public class AddAndEditTestForm extends javax.swing.JDialog {

    /**
     * Creates new form AddTestForm
     */
    int positionX, positionY;       //Cái này dùng để di chuyển form. KO cần care
    TestPanel panelparent;          //Cái sẽ lưu cái panel cha. dùng để gọi hàm load lại data trên panel chính sau khi thêm
    Test edit;              //Cái này lưu test sẽ sửa
    TestDAO testDAO = new TestDAO();
    QuestionDAO questionDAO = new QuestionDAO();
    Test_QuestionDAO test_QuestionDAO = new Test_QuestionDAO();
    ArrayList<Chapter> listChapter = (ArrayList<Chapter>) new ChapterDAO().getAllChapter();     //danh sách chapter
    ArrayList<Level> listLevel = (ArrayList<Level>) new LevelDAO().getAllLevel();       //danh sách level
    Test lastestInsertedTest;       //cái này tí sẽ lưu cái test mới được thêm vào

    //Constructor mặc định ko dùng đến đâu
    public AddAndEditTestForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    //Constructor cho việc thêm. truyền vào javax.swing.JPanel panel chính là cái panel cha. để load lại data
    public AddAndEditTestForm(java.awt.Frame parent, boolean modal, javax.swing.JPanel panel) {
        super(parent, modal);
        initComponents();
        panelparent = (TestPanel) panel;        //gán cái panelparent chính là cái panel
        jButtonEdit.setVisible(false);          //ẩn phím sửa và title sửa
        jLabelTitle1.setVisible(false);
        loadForm();                 //load chapter lên form
    }

    //Constructor cho việc sửa. Cái Test test chính là cái test được sửa . truyền vào constructor
    public AddAndEditTestForm(java.awt.Frame parent, boolean modal, Test test) {
        super(parent, modal);
        initComponents();
        edit = test;        //gán cái edit = cái test sửa truyền vào
        jButtonAdd.setVisible(false);       //ẩn phím thêm và title thêm
        jLabelTitle.setVisible(false);
        jComboBoxChapter.disable();         //disable các chapter ko cho sửa
        jComboBoxLevel.disable();
        jTextTestName.setText(test.getTest_Name());     //gán lại các dữ liệu cho textbox
        jTextTime.setText(test.getTime() + "");
        jTextLV1.setVisible(false);                 //ẩn các textbox cho nhập số câu
        jTextLV2.setVisible(false);
        jTextLV3.setVisible(false);
        jLabelLV1.setVisible(false);
        jLabelLV2.setVisible(false);
        jLabelLV3.setVisible(false);
        jComboBoxChapter.addItem(new ChapterDAO().getChapterByTestID(edit.getTest_ID()).toString());    //lấy chapter của cái test edit
        jComboBoxLevel.addItem(new LevelDAO().getLevelByID(edit.getLevel_ID()).getLevel_Name());        //Lấy level của cái test edit
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelTop = new javax.swing.JPanel();
        jPanelMove = new javax.swing.JPanel();
        jLabelExit = new javax.swing.JLabel();
        jLabelTitle = new javax.swing.JLabel();
        jLabelTestName = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabelChapter = new javax.swing.JLabel();
        jLabelLevel = new javax.swing.JLabel();
        jLabelTime = new javax.swing.JLabel();
        jLabelTitle1 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jButtonAdd = new javax.swing.JButton();
        jTextTestName = new javax.swing.JTextField();
        jTextTime = new javax.swing.JTextField();
        jButtonEdit = new javax.swing.JButton();
        jComboBoxLevel = new javax.swing.JComboBox<>();
        jComboBoxChapter = new javax.swing.JComboBox<>();
        jLabelLV3 = new javax.swing.JLabel();
        jLabelLV2 = new javax.swing.JLabel();
        jLabelLV1 = new javax.swing.JLabel();
        jTextLV3 = new javax.swing.JTextField();
        jTextLV2 = new javax.swing.JTextField();
        jTextLV1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelTop.setBackground(new java.awt.Color(0, 51, 153));
        jPanelTop.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelMove.setBackground(new java.awt.Color(0, 51, 153));
        jPanelMove.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanelMoveMouseDragged(evt);
            }
        });
        jPanelMove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelMoveMousePressed(evt);
            }
        });

        jLabelExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/close.png"))); // NOI18N
        jLabelExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelExitMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelMoveLayout = new javax.swing.GroupLayout(jPanelMove);
        jPanelMove.setLayout(jPanelMoveLayout);
        jPanelMoveLayout.setHorizontalGroup(
            jPanelMoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMoveLayout.createSequentialGroup()
                .addGap(0, 386, Short.MAX_VALUE)
                .addComponent(jLabelExit, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelMoveLayout.setVerticalGroup(
            jPanelMoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMoveLayout.createSequentialGroup()
                .addComponent(jLabelExit, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanelTop.add(jPanelMove, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 50));

        jPanel1.add(jPanelTop, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 436, 42));

        jLabelTitle.setFont(new java.awt.Font("Minion Pro", 1, 36)); // NOI18N
        jLabelTitle.setText("Thêm đề thi");
        jPanel1.add(jLabelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, -1, -1));

        jLabelTestName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelTestName.setText("Tên đề thi :");
        jPanel1.add(jLabelTestName, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 139, -1, -1));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 162, 250, 10));

        jLabelChapter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelChapter.setText("Chương :");
        jPanel1.add(jLabelChapter, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        jLabelLevel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelLevel.setText("Độ khó :");
        jPanel1.add(jLabelLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));

        jLabelTime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelTime.setText("Thời gian :");
        jPanel1.add(jLabelTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 199, -1, -1));

        jLabelTitle1.setFont(new java.awt.Font("Minion Pro", 1, 36)); // NOI18N
        jLabelTitle1.setText("Sửa đề thi");
        jPanel1.add(jLabelTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, -1, -1));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 222, 250, 10));

        jButtonAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonAdd.setText("Thêm mới");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 460, -1, -1));

        jTextTestName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextTestName.setBorder(null);
        jPanel1.add(jTextTestName, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 139, 250, -1));

        jTextTime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextTime.setBorder(null);
        jPanel1.add(jTextTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 199, 250, -1));

        jButtonEdit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonEdit.setText("Cập nhật");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 460, -1, -1));

        jPanel1.add(jComboBoxLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, 250, -1));

        jPanel1.add(jComboBoxChapter, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 250, -1));

        jLabelLV3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelLV3.setText("Khó :");
        jPanel1.add(jLabelLV3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 390, -1, -1));

        jLabelLV2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelLV2.setText("TB :");
        jPanel1.add(jLabelLV2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 390, -1, -1));

        jLabelLV1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelLV1.setText("Dễ :");
        jPanel1.add(jLabelLV1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, -1, -1));

        jTextLV3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jTextLV3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 390, 50, -1));

        jTextLV2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jTextLV2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 390, 50, -1));

        jTextLV1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jTextLV1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, 50, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExitMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabelExitMouseClicked

    private void jLabelExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExitMouseEntered
        // TODO add your handling code here:
        jLabelExit.setIcon((new javax.swing.ImageIcon(getClass().getResource("/Image/close_hover.png"))));
    }//GEN-LAST:event_jLabelExitMouseEntered

    private void jLabelExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExitMouseExited
        // TODO add your handling code here:
        jLabelExit.setIcon((new javax.swing.ImageIcon(getClass().getResource("/Image/close.png"))));
    }//GEN-LAST:event_jLabelExitMouseExited

    private void jPanelMoveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMoveMouseDragged

        // TODO add your handling code here:
        this.setLocation(this.getX() + evt.getX() - positionX, this.getY() + evt.getY() - positionY);
    }//GEN-LAST:event_jPanelMoveMouseDragged

    private void jPanelMoveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMoveMousePressed
        // TODO add your handling code here:
        positionX = evt.getX();
        positionY = evt.getY();
    }//GEN-LAST:event_jPanelMoveMousePressed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        do {
            try {
                String test_Name = jTextTestName.getText();
                if (testDAO.findByTestName(test_Name.trim()) != null) {
                    throw new Exception("Đề " + "'" + test_Name.trim() + "'" + " đã tồn tại !");
                }
                int time, QTLV1, QTLV2, QTLV3;
                if (test_Name.trim().equals("")) {
                    throw new Exception("Tên đề thi không được để trống");
                }
                try {
                    time = Integer.parseInt(jTextTime.getText());
                    if (time < 1) {
                        throw new NumberFormatException();
                    }
                } catch (NumberFormatException ex) {
                    throw new Exception("Sai định dạng thời gian");
                }
                try {       //kiểm tra số câu có đúng định dạng ko
                    QTLV1 = Integer.parseInt(jTextLV1.getText());
                    QTLV2 = Integer.parseInt(jTextLV2.getText());
                    QTLV3 = Integer.parseInt(jTextLV3.getText());
                    if (QTLV1 < 0 || QTLV2 < 0 || QTLV3 < 0) {
                        throw new NumberFormatException();
                    }
                    if (QTLV1 == 0 && QTLV2 == 0 && QTLV3 == 0) {
                        throw new Exception("Cần ít nhất một câu hỏi trong đề !");
                    }
                } catch (NumberFormatException ex1) {
                    throw new Exception("Sai định dạng số câu hỏi");
                }
                Test insert = new Test(0, test_Name, time, listLevel.get(jComboBoxLevel.getSelectedIndex()).getLevel_ID(), true);
                lastestInsertedTest = testDAO.add(insert);
                if (lastestInsertedTest != null) {
                    ArrayList<Integer> questions = new ArrayList<>();
                    questions.add(QTLV1);
                    questions.add(QTLV2);
                    questions.add(QTLV3);
                    AddQuestionToTestByTestID(questions, listChapter.get(jComboBoxChapter.getSelectedIndex()).getChapter_ID(),
                            listLevel.get(jComboBoxLevel.getSelectedIndex()).getLevel_ID());
                }
                panelparent.loadData();
                if (JOptionPane.showConfirmDialog(this, "Bạn có muốn tiếp tục thêm không ?", "", JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION) {
                    this.dispose();
                    break;
                } else {
                    clear();
                    break;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage());
                return;
            }
        } while (true);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void clear() {
        jTextTestName.setText("");
        jTextTime.setText("");
        jTextLV1.setText("");
        jTextLV2.setText("");
        jTextLV3.setText("");
        jTextTestName.requestFocus();
    }

    //đây là thêm câu hỏi vào đề theo id đề. cái này b viết mà nên chắc ko cần giải thích
    private void AddQuestionToTestByTestID(ArrayList<Integer> questions, int chapter_ID, int test_Level_ID) throws Exception {
                addTestQuestionRandom(questions.get(0), chapter_ID, 1);
                addTestQuestionRandom(questions.get(1), chapter_ID, 2);
                addTestQuestionRandom(questions.get(2), chapter_ID, 3);      
        
    }

    //hàm thêm câu hỏi vào đề
    void addTestQuestionRandom(int amountRandom, int chapter_ID, int level_ID) throws Exception {
        //Lấy listAdd là lấy ra các câu hỏi theo chương. Cái này t viết được random bên sql nên ko cần lấy rồi shuffed nữa
        //Đỡ mất thời gian hơn. Qua DAO đọc để hiểu thêm
        ArrayList<Question> listAdd = (ArrayList<Question>) questionDAO.getRandomByChapterIDAndLevelID(chapter_ID, level_ID);
        if (amountRandom > listAdd.size()) {
            //Nếu ko đủ câu hỏi sẽ xóa cái đề mới được thêm
            testDAO.deleteByID(lastestInsertedTest.getTest_ID());
            throw new Exception("Không đủ số câu hỏi !");
        }
        for (int i = 0; i < amountRandom; i++) {
            try {
                //trong quá trình thêm câu hỏi vào đề nếu có lỗi sẽ xóa đề và thông báo
                test_QuestionDAO.add(new Test_Question(0, lastestInsertedTest.getTest_ID(), listAdd.get(i).getQuestion_ID()));
            } catch (Exception e) {
                testDAO.deleteByID(lastestInsertedTest.getTest_ID());
                throw new Exception("Có lỗi ! Thêm thất bại");
            }
        }
    }

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        try {
            String test_Name = jTextTestName.getText();
            int time;
            if (test_Name.trim().equals("")) {
                throw new Exception("Tên đề thi không được để trống");
            }
            try {
                time = Integer.parseInt(jTextTime.getText());
                if (time < 1) {
                    throw new NumberFormatException();
                }
            } catch (NumberFormatException ex) {
                throw new Exception("Sai định dạng thời gian");
            }
            if (edit.getTest_Name().trim().equals(test_Name)) {
                Boolean isUpdate = testDAO.updateNameAndTimeByID(new Test(edit.getTest_ID(), test_Name, time, 0, true));
                if (!isUpdate) {
                    throw new Exception("Có lỗi ! Cập nhật không thành công");
                } else {
                    this.dispose();
                }
            } else {
                if (testDAO.findByTestName(test_Name.trim()) != null) {
                    throw new Exception("Đề " + "'" + test_Name.trim() + "'" + " đã tồn tại !");
                } else {
                    Boolean isUpdate = testDAO.updateNameAndTimeByID(new Test(edit.getTest_ID(), test_Name, time, 0, true));
                    if (!isUpdate) {
                        throw new Exception("Có lỗi ! Cập nhật không thành công");
                    } else {
                        this.dispose();
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void loadForm() {
        for (Level item : listLevel) {
            jComboBoxLevel.addItem(item.getLevel_Name());
        }
        for (Chapter item : listChapter) {
            jComboBoxChapter.addItem(item.toString());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddAndEditTestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddAndEditTestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddAndEditTestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddAndEditTestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddAndEditTestForm dialog = new AddAndEditTestForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JComboBox<String> jComboBoxChapter;
    private javax.swing.JComboBox<String> jComboBoxLevel;
    private javax.swing.JLabel jLabelChapter;
    private javax.swing.JLabel jLabelExit;
    private javax.swing.JLabel jLabelLV1;
    private javax.swing.JLabel jLabelLV2;
    private javax.swing.JLabel jLabelLV3;
    private javax.swing.JLabel jLabelLevel;
    private javax.swing.JLabel jLabelTestName;
    private javax.swing.JLabel jLabelTime;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelTitle1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelMove;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField jTextLV1;
    private javax.swing.JTextField jTextLV2;
    private javax.swing.JTextField jTextLV3;
    private javax.swing.JTextField jTextTestName;
    private javax.swing.JTextField jTextTime;
    // End of variables declaration//GEN-END:variables

}
