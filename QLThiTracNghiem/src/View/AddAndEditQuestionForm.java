/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAO.Implement.AnswerDAO;
import DAO.Implement.ChapterDAO;
import DAO.Implement.LessonDAO;
import DAO.Implement.LevelDAO;
import DAO.Implement.QuestionDAO;
import Model.Answer;
import Model.Chapter;
import Model.Lesson;
import Model.Level;
import Model.Question;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author mrloc
 */
public class AddAndEditQuestionForm extends javax.swing.JDialog {

    /**
     * Creates new form AddAndEditQuestionForm
     */
    int positionX, positionY;       //cái này dùng để di chuyển form. đừng quan tâm
    QuestionPanel panelparent;      //Cái này để lưu panel cha dùng để load lại data
    Question edit;              //Chứa câu hỏi sẽ sửa
    ArrayList<Answer> listAnswer;       //Dãy chứa các câu trả lời sẽ sửa
    ArrayList<Chapter> listChapter = (ArrayList<Chapter>) new ChapterDAO().getAllChapter(); //Dãy chứa các chapter
    ArrayList<Level> listLevel = (ArrayList<Level>) new LevelDAO().getAllLevel();   //Dãy chứa các level
    ArrayList<Lesson> listLesson;       //Dãy chứa các lesson
    ChapterDAO chapterDAO = new ChapterDAO();
    LessonDAO lessonDAO = new LessonDAO();
    QuestionDAO questionDAO = new QuestionDAO();
    AnswerDAO answerDAO = new AnswerDAO();

    //Hàm khởi tạo mặc định. Ko dùng
    public AddAndEditQuestionForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    //Hàm khởi tạo thêm. Truyền vào cái javax.swing.JPanel panel chính là cái panel cha để gọi loadData sau này
    public AddAndEditQuestionForm(java.awt.Frame parent, boolean modal, javax.swing.JPanel panel) {
        super(parent, modal);
        initComponents();
        panelparent = (QuestionPanel) panel;    //gán cái panelparent chính là cái panel truyền vào
        jButtonEdit.setVisible(false);          //ẩn nút sửa và title sửa
        jLabelTitle1.setVisible(false);
        loadForm();                 //Load dữ liệu vào chapter
    }
    //Hàm khởi tạo sửa. Truyền vài cái Question qt là cái question sẽ sửa
    public AddAndEditQuestionForm(java.awt.Frame parent, boolean modal, Question qt) {
        super(parent, modal);
        initComponents();
        edit = qt;          //Gán cái question edit là cái question sẽ sửa
        jButtonAdd.setVisible(false);       //Ẩn phím thêm và title thêm
        jLabelTitle.setVisible(false);
        loadForm();                         //Load dữ liệu
        jTextQuestion.setText(qt.getQuestion());        //load câu hỏi vào text
        //gán cái selectedItem của Level là cái level của câu hỏi sửa
        jComboBoxLevel.setSelectedItem(new LevelDAO().getLevelByID(edit.getLevel_ID()).getLevel_Name());
        //gán cái selectedItem của Chapter là cái chapter của câu hỏi sửa
        jComboBoxChapter.setSelectedItem((chapterDAO.getChapterByQuestion(qt)).toString());
        //Lấy cái lesson của cái câu hỏi cần sửa. thật ra hơi thừa chỉ để load data lên combobox đẹp hơn nên làm thế này
        Lesson oldData = lessonDAO.findByID(qt.getLesson_ID());
        jComboBoxLesson.setSelectedItem(oldData.getLesson() + " : " + oldData.getLesson_Name());
        //Lấy danh sách câu trả lời của cái question sửa
        listAnswer = (ArrayList<Answer>) new AnswerDAO().getListAnswerByQuestionID(qt.getQuestion_ID());
        try {
            //cái này là load lại dữ liệu answer vào cái text vs radio thôi
            jTextAnswer1.setText(listAnswer.get(0).getAnswer());
            jTextAnswer2.setText(listAnswer.get(1).getAnswer());
            jTextAnswer3.setText(listAnswer.get(2).getAnswer());
            jTextAnswer4.setText(listAnswer.get(3).getAnswer());
            if (listAnswer.get(0).isCorrect()) {
                jRadio1.setSelected(true);
            } else if (listAnswer.get(1).isCorrect()) {
                jRadio2.setSelected(true);
            } else if (listAnswer.get(2).isCorrect()) {
                jRadio3.setSelected(true);
            } else if (listAnswer.get(3).isCorrect()) {
                jRadio4.setSelected(true);
            }
        } catch (ArrayIndexOutOfBoundsException e) {
        }
    }
    //Load dữ liệu vào các chapter
    private void loadForm() {
        for (Chapter item : listChapter) {
            jComboBoxChapter.addItem(item.toString());
        }
        for (Level item : listLevel) {
            jComboBoxLevel.addItem(item.getLevel_Name());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanelTop = new javax.swing.JPanel();
        jPanelMove = new javax.swing.JPanel();
        jLabelExit = new javax.swing.JLabel();
        jButtonAdd = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jLabelTitle1 = new javax.swing.JLabel();
        jLabelTitle = new javax.swing.JLabel();
        jLabelQuestion = new javax.swing.JLabel();
        jTextQuestion = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jComboBoxLevel = new javax.swing.JComboBox<>();
        jLabelLevel = new javax.swing.JLabel();
        jLabelChapter = new javax.swing.JLabel();
        jComboBoxChapter = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxLesson = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextAnswer1 = new javax.swing.JTextField();
        jTextAnswer2 = new javax.swing.JTextField();
        jTextAnswer3 = new javax.swing.JTextField();
        jTextAnswer4 = new javax.swing.JTextField();
        jRadio1 = new javax.swing.JRadioButton();
        jRadio2 = new javax.swing.JRadioButton();
        jRadio3 = new javax.swing.JRadioButton();
        jRadio4 = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelTop.setBackground(new java.awt.Color(0, 51, 153));
        jPanelTop.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelMove.setBackground(new java.awt.Color(0, 51, 153));
        jPanelMove.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanelMoveMouseDragged(evt);
            }
        });
        jPanelMove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelMoveMousePressed(evt);
            }
        });

        jLabelExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/close.png"))); // NOI18N
        jLabelExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelExitMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelMoveLayout = new javax.swing.GroupLayout(jPanelMove);
        jPanelMove.setLayout(jPanelMoveLayout);
        jPanelMoveLayout.setHorizontalGroup(
            jPanelMoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMoveLayout.createSequentialGroup()
                .addGap(0, 696, Short.MAX_VALUE)
                .addComponent(jLabelExit, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelMoveLayout.setVerticalGroup(
            jPanelMoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMoveLayout.createSequentialGroup()
                .addComponent(jLabelExit, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanelTop.add(jPanelMove, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 50));

        jPanel1.add(jPanelTop, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 740, 42));

        jButtonAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonAdd.setText("Thêm mới");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 550, -1, -1));

        jButtonEdit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonEdit.setText("Cập nhật");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 550, -1, -1));

        jLabelTitle1.setFont(new java.awt.Font("Minion Pro", 1, 36)); // NOI18N
        jLabelTitle1.setText("Sửa câu hỏi");
        jPanel1.add(jLabelTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, -1, -1));

        jLabelTitle.setFont(new java.awt.Font("Minion Pro", 1, 36)); // NOI18N
        jLabelTitle.setText("Thêm câu hỏi");
        jPanel1.add(jLabelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, -1, -1));

        jLabelQuestion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelQuestion.setText("Câu hỏi :");
        jPanel1.add(jLabelQuestion, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        jTextQuestion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextQuestion.setBorder(null);
        jPanel1.add(jTextQuestion, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 550, -1));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 560, 10));

        jPanel1.add(jComboBoxLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 130, -1));

        jLabelLevel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelLevel.setText("Độ khó :");
        jPanel1.add(jLabelLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));

        jLabelChapter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelChapter.setText("Chương :");
        jPanel1.add(jLabelChapter, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, -1));

        jComboBoxChapter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxChapterItemStateChanged(evt);
            }
        });
        jPanel1.add(jComboBoxChapter, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 250, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Bài :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, -1, -1));

        jPanel1.add(jComboBoxLesson, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, 250, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Đáp án 1 :");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 26, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Đáp án 2 :");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 75, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Đáp án 3 :");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 123, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Đáp án 4 :");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 172, -1, -1));
        jPanel2.add(jTextAnswer1, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 24, 416, -1));
        jPanel2.add(jTextAnswer2, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 73, 416, -1));
        jPanel2.add(jTextAnswer3, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 121, 416, -1));
        jPanel2.add(jTextAnswer4, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 170, 416, -1));

        buttonGroup1.add(jRadio1);
        jRadio1.setSelected(true);
        jRadio1.setText("Đáp án đúng");
        jPanel2.add(jRadio1, new org.netbeans.lib.awtextra.AbsoluteConstraints(572, 23, -1, -1));

        buttonGroup1.add(jRadio2);
        jRadio2.setText("Đáp án đúng");
        jPanel2.add(jRadio2, new org.netbeans.lib.awtextra.AbsoluteConstraints(572, 72, -1, -1));

        buttonGroup1.add(jRadio3);
        jRadio3.setText("Đáp án đúng");
        jPanel2.add(jRadio3, new org.netbeans.lib.awtextra.AbsoluteConstraints(572, 120, -1, -1));

        buttonGroup1.add(jRadio4);
        jRadio4.setText("Đáp án đúng");
        jPanel2.add(jRadio4, new org.netbeans.lib.awtextra.AbsoluteConstraints(572, 169, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 700, 210));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 582, 180, 10));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        try {
            String question = jTextQuestion.getText();
            String answer1 = jTextAnswer1.getText();
            String answer2 = jTextAnswer2.getText();
            String answer3 = jTextAnswer3.getText();
            String answer4 = jTextAnswer4.getText();
            if (question.trim().equals("")) {
                throw new Exception("Câu hỏi không được để trống!");
            }
            if (answer1.trim().equals("") || answer2.trim().equals("")
                    || answer3.trim().equals("") || answer4.trim().equals("")) {
                throw new Exception("Câu trả lời không được để trống!");
            }
            Question update = new Question(edit.getQuestion_ID(), question, listLevel.get(jComboBoxLevel.getSelectedIndex()).getLevel_ID(), listLesson.get(jComboBoxLesson.getSelectedIndex()).getLesson_ID());
            if(!questionDAO.updateQuestion(update)) //Nếu cập nhật không thành công
                throw new Exception("Có lỗi gì đó cập nhật không thành công !");
            else{       //Cập nhật các câu trả lời thôi
                Answer edit1 = listAnswer.get(0);
                Answer edit2 = listAnswer.get(1);
                Answer edit3 = listAnswer.get(2);
                Answer edit4 = listAnswer.get(3);
                edit1.setAnswer(answer1);
                edit1.setCorrect(jRadio1.isSelected());

                edit2.setAnswer(answer2);
                edit2.setCorrect(jRadio2.isSelected());
                
                edit3.setAnswer(answer3);
                edit3.setCorrect(jRadio3.isSelected());
                
                edit4.setAnswer(answer4);
                edit4.setCorrect(jRadio4.isSelected());
                if(!answerDAO.updateAnswer(edit1) || !answerDAO.updateAnswer(edit2) || !answerDAO.updateAnswer(edit3) || !answerDAO.updateAnswer(edit4)){
                    throw new Exception("Có lỗi gì đó cập nhật không thành công !");
                }
                else{
                    JOptionPane.showMessageDialog(rootPane,"Cập nhật thành công !");
                    this.dispose();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
        do {
            String question = jTextQuestion.getText();
            String answer1 = jTextAnswer1.getText();
            String answer2 = jTextAnswer2.getText();
            String answer3 = jTextAnswer3.getText();
            String answer4 = jTextAnswer4.getText();
            try {
                if (question.trim().equals("")) {
                    throw new Exception("Câu hỏi không được để trống!");
                }
                if (answer1.trim().equals("") || answer2.trim().equals("")
                        || answer3.trim().equals("") || answer4.trim().equals("")) {
                    throw new Exception("Câu trả lời không được để trống!");
                }
                Question insert = new Question(0, question, listLevel.get(jComboBoxLevel.getSelectedIndex()).getLevel_ID(), listLesson.get(jComboBoxLesson.getSelectedIndex()).getLesson_ID());
                Question isInserted = questionDAO.add(insert);
                //Cái isInserted là cái quesiton được insert. Hàm add này trả về cái Question vừa được thêm vào
                if (isInserted == null) {       //Nếu câu được thêm là null => thêm ko thành công
                    throw new Exception("Có lỗi gì đó ! Thêm không thành công");
                } else {
                    //Thêm các câu trả lời theo câu hỏi
                    Answer as1 = new Answer(0, answer1, jRadio1.isSelected(), isInserted.getQuestion_ID());
                    Answer as2 = new Answer(0, answer2, jRadio2.isSelected(), isInserted.getQuestion_ID());
                    Answer as3 = new Answer(0, answer3, jRadio3.isSelected(), isInserted.getQuestion_ID());
                    Answer as4 = new Answer(0, answer4, jRadio4.isSelected(), isInserted.getQuestion_ID());
                    if (!answerDAO.add(as1) || !answerDAO.add(as2) || !answerDAO.add(as3) || !answerDAO.add(as4)) {
                        throw new Exception("Có lỗi gì đó ! Thêm thất bại");
                    }
                    panelparent.loadData();         //load lại data trên panel chính. Đây là lý do cần truyền vào constructor
                }
                if (JOptionPane.showConfirmDialog(this, "Bạn có muốn tiếp tục thêm không ?", "", JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION) {
                    this.dispose();
                    break;
                } else {
                    clear();
                    break;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage());
                return;
            }
        } while (true);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void clear() {
        jTextQuestion.setText("");
        jTextAnswer1.setText("");
        jTextAnswer2.setText("");
        jTextAnswer3.setText("");
        jTextAnswer4.setText("");
        jComboBoxChapter.setSelectedIndex(0);
        jComboBoxLevel.setSelectedIndex(0);
        jTextQuestion.requestFocus();
    }

    private void jPanelMoveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMoveMousePressed
        // TODO add your handling code here:
        positionX = evt.getX();
        positionY = evt.getY();
    }//GEN-LAST:event_jPanelMoveMousePressed

    private void jPanelMoveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMoveMouseDragged

        // TODO add your handling code here:
        this.setLocation(this.getX() + evt.getX() - positionX, this.getY() + evt.getY() - positionY);
    }//GEN-LAST:event_jPanelMoveMouseDragged

    private void jLabelExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExitMouseExited
        // TODO add your handling code here:
        jLabelExit.setIcon((new javax.swing.ImageIcon(getClass().getResource("/Image/close.png"))));
    }//GEN-LAST:event_jLabelExitMouseExited

    private void jLabelExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExitMouseEntered
        // TODO add your handling code here:
        jLabelExit.setIcon((new javax.swing.ImageIcon(getClass().getResource("/Image/close_hover.png"))));
    }//GEN-LAST:event_jLabelExitMouseEntered

    private void jLabelExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExitMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabelExitMouseClicked

    private void jComboBoxChapterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxChapterItemStateChanged
        jComboBoxLesson.removeAllItems();
        listLesson = (ArrayList<Lesson>) lessonDAO.findByChapterID(listChapter.get(jComboBoxChapter.getSelectedIndex()).getChapter_ID());
        for (Lesson item : listLesson) {
            jComboBoxLesson.addItem(item.getLesson() + " : " + item.getLesson_Name());
        }
    }//GEN-LAST:event_jComboBoxChapterItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddAndEditQuestionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddAndEditQuestionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddAndEditQuestionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddAndEditQuestionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddAndEditQuestionForm dialog = new AddAndEditQuestionForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JComboBox<String> jComboBoxChapter;
    private javax.swing.JComboBox<String> jComboBoxLesson;
    private javax.swing.JComboBox<String> jComboBoxLevel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelChapter;
    private javax.swing.JLabel jLabelExit;
    private javax.swing.JLabel jLabelLevel;
    private javax.swing.JLabel jLabelQuestion;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelTitle1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelMove;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JRadioButton jRadio1;
    private javax.swing.JRadioButton jRadio2;
    private javax.swing.JRadioButton jRadio3;
    private javax.swing.JRadioButton jRadio4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextAnswer1;
    private javax.swing.JTextField jTextAnswer2;
    private javax.swing.JTextField jTextAnswer3;
    private javax.swing.JTextField jTextAnswer4;
    private javax.swing.JTextField jTextQuestion;
    // End of variables declaration//GEN-END:variables
}
